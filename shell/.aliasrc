#!/bin/bash
# shellcheck disable=SC1090

# Make common commands shorter
# shellcheck disable=SC2142
alias \
  q="exit" \
  c="clear" \
  e="\$EDITOR" \
  g="git" \
  p="paccy" \
  se="sudoedit" \
  sshp='ssh -o "StrictHostKeyChecking=no" -o PreferredAuthentications=password -o PubkeyAuthentication=no' \
  bs='source ~/.bashrc' \
  lg='lazygit' \
  ch="code . && exit" \
  bye='systemctl suspend-then-hibernate' \
  utop='htop -t -u $(whoami)' \
  perms="stat -c '%a %n' *" \
  mimetype="file --dereference --brief --mime-type" \
  archive="7z a -m0=LZMA2 -mx=9 -mmt\$(nproc) archive.7z" \
  update="paccy -Syu" \
  pf='fd -t f | fzf --preview "bat --color=always --style=numbers --line-range :200 {}"' \
  pf.='fd -t f -H | fzf --preview "bat --color=always --style=numbers --line-range :200 {}"' \
  ef='nvim "$(pf)"' \
  ef.='nvim "$(pf.)"' \
  gu='xdg-open $(git config --get remote.origin.url)' \
  cheat='_x() { curl cht.sh/"$1"; }; _x' \
  tmuxs='tmux new -A -s ${PWD##*/}' \
  tgs='tmux-go-session' \
  pnav='cd "$(_projselect)"' \
  dlmv='mv ~/Downloads/"$(\ls -At ~/Downloads | head -n1)" .' \
  urldecode='python3 -c "import sys, urllib.parse as ul; print(ul.unquote_plus(sys.argv[1]))"' \
  urlencode='python3 -c "import sys, urllib.parse as ul; print (ul.quote_plus(sys.argv[1]))"'

# Helm
alias \
  hls="helm ls" \
  hdu="helm dependency update" \
  hui="helm upgrade --install" \
  hur="helm upgrade --reuse-values" \
  hua='helm uninstall $(helm ls --short)'

# Kubectl
alias \
  krc='kubectl config current-context' \
  krn='kubectl config get-contexts --no-headers "$(krc)" | awk "{print \$5}" | sed "s/^$/default/"' \
  kln='kubectl get -o name ns | sed "s|^.*/|  |;\|^  $(krn)$|s/ /*/"' \
  ksn='kubectl config set-context --current --namespace' \
  kdcn='command kubectl delete ns "$(krn)"' \
  kccn='command kubectl create ns "$(krn)"' \
  k='kubectl'

# Docker
alias \
  drr="docker run -it --rm" \
  dprune='docker stop $(docker ps -q); docker system prune -a --volumes'

# Better flags
alias \
  grep="grep --color=auto" \
  diff="diff --color=auto" \
  ip="ip -color=auto" \
  cp="cp -i" \
  mv="mv -i" \
  rm="rm -v" \
  mkdir="mkdir -p" \
  free="free -h" \
  df="df -h" \
  upower="upower -i /org/freedesktop/UPower/devices/battery_BAT0" \
  dd="dd bs=512k" \
  gcc="gcc -Wall -W -pedantic" \
  htop="htop -s PERCENT_CPU" \
  mpv='mpv --hwdec=auto'

if [ "$(uname -s)" = "Darwin" ]; then
  alias \
    ls="gls -hN --color=auto --group-directories-first" \
    ll="gls -hNlA --color=auto" \
    find="gfind" \
    sed="gsed"
else
  alias \
    ls="ls -hN --color=auto --group-directories-first" \
    ll="ls -hNlA --color=auto"
fi

# Navigation
alias \
  ..='cd ..' \
  ...='cd ../..' \
  ....='cd ../../..' \
  h='cd ~' \
  bin='cd ~/dotfiles/.local/bin' \
  dl='cd ~/Downloads' \
  dots='cd ~/dotfiles' \
  config='cd ~/dotfiles/.config'

[ -x "$(command -v bat)" ] && alias cat="bat"

# command -v kubectl >/dev/null 2>&1 && . <(kubectl completion bash)
# command -v kubectl >/dev/null 2>&1 && complete -o default -F __start_kubectl k
command -v helm >/dev/null 2>&1 && . <(helm completion "${SHELL##*/}")
command -v k6 >/dev/null 2>&1 && . <(k6 completion "${SHELL##*/}")
command -v gh >/dev/null 2>&1 && . <(gh completion -s "${SHELL##*/}")

flycd() {
  tmp="$(mktemp)"
  trap 'rm -rf -- "${tmp:-?}"' EXIT INT TERM HUP
  fly -write-pwd "$tmp"
  pushd "$(cat "$tmp")" || exit
}

# Git browse
gbrowse() {
  git log --graph --color=always --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
    fzf --ansi --no-sort --reverse --tiebreak=index +m \
      --bind "ctrl-m:execute: git show --color=always \$(echo {} | cut -d' ' -f2)" \
      --preview "git show --stat --color=always \$(echo {} | cut -d' ' -f2)" \
      --preview-window=right,60
}

# Switch directory
sd() {
  local t
  t="$({ fd . --type directory -I 2>/dev/null || find . -type d -not -path '*/.*' 2>/dev/null; } | fzf-tmux -p)"
  [ -n "$t" ] && cd "$t" && ls
}

sdh() {
  local t
  t="$({ fd . --type directory -HIE '.git' 2>/dev/null || find . -type d -not -path '*/\.git/*' 2>/dev/null; } | fzf-tmux -p)"
  [ -n "$t" ] && cd "$t" && ls
}

_arg_help() { tf "${READLINE_LINE%% *}"; }
_man_help() {
  res="${READLINE_LINE%% *}"
  help "$res" 2>/dev/null || man "$res"
}

bind -m vi-insert -x '"\eh": _arg_help'
bind -m vi-insert -x '"\eH": _man_help'

# External stuff
# shellcheck disable=SC1091
[ -f "/usr/share/fzf/key-bindings.${SHELL##*/}" ] && . "/usr/share/fzf/key-bindings.${SHELL##*/}"
[ -f "/opt/homebrew/Cellar/fzf/0.44.1/shell/key-bindings.${SHELL##*/}" ] && . "/opt/homebrew/Cellar/fzf/0.44.1/shell/key-bindings.${SHELL##*/}"
[ -f "/usr/share/doc/pkgfile/command-not-found.${SHELL##*/}" ] && . "/usr/share/doc/pkgfile/command-not-found.${SHELL##*/}"
