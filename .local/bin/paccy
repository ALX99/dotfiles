#!/bin/bash
# Pacman + yay wrapper that adds very useful features
# Requires expac, fzf

pkgList=${PKGLIST:-~/dotfiles/.pkgList} # Path to package list

usage="usage $(basename "$0") [OPTIONS] [PACKAGE(S) NAMES]

where:
    -h,  --help             show this help text
    -Syu                    update package(s)
    -S                      install package(s)
    -s                      search for package(s)
    -u,  --update           update your pacman mirrors to use the fastest mirror
    -ia, --install-all      install every package in your package list
    -lt, --list-tracked     list all your tracked packages  
    -lu, --list-untracked   list all your untracked packages
    -rt, --remove-tracked   remove all your tracked packages  
    -ru, --remove-untracked remove all your untracked packages  
    -it, --install-tracked  install a tracked package

The pkglist variable is currently set to $pkgList and can be
changed by setting the PKGLIST environtment variable
"

# Write the package to the pkgList
log_pkg() {
    # Only do something if the package already isn't there
    if grep -F "$1" "$pkgList" &>/dev/null; then
        if [ -z "$comment" ]; then
            echo "$1" >>"$pkgList"
        else
            echo "$1 # $comment" >>"$pkgList"
        fi
    fi

    # Sort and remove dupes
    local sorted=$(sort -u "$pkgList")
    echo "$sorted" >"$pkgList"
}

# Read packages to either install or remove
read_pkgs() {
    pkgs=()
    while [[ -n $1 ]] && [[ ${1:0:1} != - ]]; do
        pkgs+=("$1")
        shift
    done
}
# Remove a tracked package
# 1: package do be untracked
remove_tracked() {
    sed -i '/'"$1"'/d' "$pkgList"
}

# Installs a package and exits
install_pkg() {
    [[ -z $1 ]] && exit 0
    yay -S "$1" && log_pkg "$1"
    exit 0
}
# Installs all the packages listed under the packagelist
install() {
    get_tracked
    yay -S --needed $tracked
}
# Update the mirrors
update() {
    echo "Updating mirrors... Please be patinet"
    # packages are signed which pacman verifies.
    # packages replaced with another one through MITM therefore won't instsall.
    sudo reflector --latest 200 --sort rate --save /etc/pacman.d/mirrorlist
    echo "Done!"
}
# Get tracked packages under the variable 'tracked'
get_tracked() {
    tracked="$(cut -d ' ' -f1 "$pkgList")"
}
# Get untracked packages under the variable 'untracked'
get_untracked() {
    get_tracked
    untracked="$(diff --new-line-format="" --unchanged-line-format="" \
        <(comm -23 <(pacman -Qeq | sort) <(pacman -Qgq base-devel | sort)) \
        <(echo "$tracked"))"
}
main() {
    case "$1" in
    -h | --help)
        echo "$usage"
        exit 0
        ;;
    -S)
        shift
        read_pkgs "$@"
        read -rp "Comment to add for these package(s): " comment

        if ! yay -S ${pkgs[*]}; then
            exit "$?"
        fi

        for i in "${pkgs[@]}"; do
            log_pkg "$i"
        done
        exit 0
        ;;
    -Rns)
        shift
        read_pkgs "$@"

        # TODO
        # This could be improved
        if yay -Rns ${pkgs[*]}; then
            for pkg in "${pkgs[@]}"; do
                remove_tracked "$pkg"
            done
        fi
        exit 0
        ;;
    -lt | --list-tracked)
        get_tracked
        echo "$tracked" | "${preview[@]}" --bind 'enter:execute(pacman -Qil {} | less)'
        exit 0
        ;;
    -lu | --list-untracked)
        get_untracked
        echo "$untracked" | "${preview[@]}" --bind 'enter:execute(pacman -Qil {} | less)'
        exit 0
        ;;
    -rt | --remove-tracked)
        get_tracked
        pkg=$(echo "$tracked" | "${preview[@]}")
        [[ -z $pkg ]] && exit 0
        sudo pacman -Rns "$pkg" && remove_tracked "$pkg"
        exit 0
        ;;
    -ru | --remove-untracked)
        get_untracked
        pkg=$(echo "$untracked" | "${preview[@]}")
        [[ -z $pkg ]] && exit 0
        sudo pacman -Rns "$pkg"
        exit 0
        ;;
    -it | --install-tracked)
        get_tracked
        echo "$tracked" >/tmp/tracked
        pacman -Qq >/tmp/all
        diff=$(comm -23 /tmp/tracked /tmp/all)
        pkg=$(echo "$diff" | fzf --preview 'yay -Si {1}')
        install_pkg "$pkg"
        ;;
    -s)
        shift
        pkg=$(yay -Slq | fzf -m --preview 'yay -Si {1}')
        install_pkg "$pkg"
        ;; # Search in AUR
    -ia | --install-all)
        install
        exit 0
        ;;
    -u | --update)
        update
        exit 0
        ;;
    -Syu)

        if [ $(/usr/bin/yay -Pw | tee /dev/tty | wc -l) = 0 ]; then
            yay -Syu --answerdiff All --answerclean NotInstalled
        fi
        exit 0
        ;;
    *)
        echo "***************************************************************************************"
        echo "* The argument(s) didn't match anything paccy could handle so it was passed on to yay *"
        echo "* Run paccy -h for usage                                                              *"
        echo "***************************************************************************************"
        yay "$@"
        exit 1
        ;;
    esac
}

preview=(fzf --preview 'pacman -Qi {}')
main "$@"
